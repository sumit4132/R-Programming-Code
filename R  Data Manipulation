# 1.	Extract these individual columns:
# a.	Extract the 5th column & store it in 'customer_5'
# b.	Extract the 15th column & store it in 'customer_15'

library(dplyr)

customer_5 <- customer_churn %>% select(5)
customer_15 <- customer_churn %>% select(15)

# 2.	Extract the column numbers 3,6,9,12,15 & 18 and store the result in 'customer_3_multiple'

customer_3_multiple <- customer_churn %>% select(3,6,9,12,15,18)


# 3.	Extract all the columns from column number-10 to column number-20 and store the result in 'c_10_20'
c_10_20 <- customer_churn %>% select(10:20)


# 4.	Extract all the columns which start with letter 'P' & store it in 'customer_P'

customer_P <- customer_churn %>% select(starts_with("P"))

# 5.	Extract all the columns which end with letter 's' & store it in 'customer_s'

customer_s <- customer_churn %>% select(ends_with("s"))


########################################

# Questions on filter() function:

# 1.	Extract all the customers whose Internet Service is "DSL" & store the result in 'customer_dsl'
customer_dsl <- customer_churn %>% filter(InternetService == "DSL")

# 2.	Extract all the customers whose Contract type is 'Month-to-month' & store the result in 'customer_month'
customer_month <- customer_churn %>% filter(Contract == "Month-to-month")


# 3.	Extract all the male senior citizens whose Payment Method is Electronic check & store the result in 'senior_male_electronic'

senior_male_electronic <- customer_churn %>% filter(gender == "Male" & SeniorCitizen == 1 & PaymentMethod == "Electronic check")


# 4.	Extract all those customers whose tenure is greater than 70 months or their Total charges is more than 8000$ & store the result in 'customer_total_tenure'
customer_total_tenure <- customer_churn %>% filter(tenure > 70 | TotalCharges > 8000)


#5.	Extract all the customers whose Contract is of two years, payment method is Mailed check & the value of Churn is 'Yes' & store the result in 'two_mail_yes'
two_mail_yes <- customer_churn %>% filter(Contract == 2 & PaymentMethod == "Mailed check" & Churn == "Yes")


# Questions on sample_n(), sample_frac() & count():
  
#  1.	Extract 333 random records from the customer_churn dataframe & store the result in 'customer_333'

customer_333 <- customer_churn %>% sample_n(333)

#  2.	Extract 1000 random records from the customer_churn dataframe & store the result in 'customer_1000'

customer_1000 < - customer_churn %>% sample_n(1000)


#  3.	Randomly extract 23% of the records from the customer_churn dataframe & store the result in 'customer_23_percent'

customer_23_percent <- customer_churn %>% sample_n(0.23)


#  4.	Get the count of different levels from the 'PaymentMethod' column

customer_churn %>% count(PaymentMethod)

#  5.	Get the count of different levels from the 'Churn' column
customer_churn %>% count(Churn)

##########################################

# Questions on summarise() & group_by():

#  1.	Get the median, variance & standard deviation for the 'tenure' column

# Median
customer_churn %>% summarise(median_tenure = median(tenure))

# Variance
customer_churn %>% summarise(variance_tenure = var(tenure))

#Standard Deviation
customer_churn %>% summarise(standardDev_tenure = sd(tenure))

#  2.	Get the median, variance & standard deviation for the 'MonthlyCharges' column
# Median
customer_churn %>% summarise(median_MonthlyCharges = median(MonthlyCharges))

#Variance
customer_churn %>% summarise(variance_MonthlyCharges = var(MonthlyCharges))

#Standard Deviation
customer_churn %>% summarise(sd_tenure = sd(MonthlyCharges))


#  3.	Get the standard deviation of 'tenure' & group it w.r.t 'PaymentMethod' column

customer_churn %>% group_by(PaymentMethod) %>% summarize(sd(tenure))


#  4.	Get the median of 'MonthlyCharges' & group it w.r.t 'Contract' column

customer_churn %>% group_by(Contract) %>% summarize(median(MonthlyCharges))

#  5.	Get the variance of 'TotalCharges' & group it w.r.t 'InternetService' column

customer_churn %>% group_by(InternetService) %>% summarize(var(TotalCharges))

